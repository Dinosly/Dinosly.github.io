(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{184:function(a,t,r){"use strict";r.r(t);var e=r(6),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"二、数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、数据类型"}},[a._v("#")]),a._v(" 二、数据类型")]),a._v(" "),r("h1",{attrs:{id:"_1-数据类型概念分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型概念分类"}},[a._v("#")]),a._v(" 1.数据类型概念分类")]),a._v(" "),r("h2",{attrs:{id:"_1-1-基本数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-基本数据类型"}},[a._v("#")]),a._v(" 1.1 基本数据类型")]),a._v(" "),r("h3",{attrs:{id:"_1-1-1-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-string"}},[a._v("#")]),a._v(" 1.1.1 String")]),a._v(" "),r("ul",[r("li",[a._v("模板字符串：\n"),r("ul",[r("li",[a._v("${变量名}"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var name = '小明';\nvar age = 20;\nvar message = `你好, ${name}, 你今年${age}岁了!`;\n")])])])])])]),a._v(" "),r("li",[a._v("字符串常用方法\t：\n"),r("ul",[r("li",[a._v("字符串是不可变的，如果对字符串的某个索引赋值，不会报错，也不会改变值")]),a._v(" "),r("li",[a._v("取字符串某个指定位置的字符，使用类似Array的下标操作，索引号从0开始")]),a._v(" "),r("li",[a._v("toUpperCase()把一个字符串全部变为大写：")]),a._v(" "),r("li",[a._v("toLowerCase()把一个字符串全部变为小写：")]),a._v(" "),r("li",[a._v("indexOf()会搜索指定字符串出现的位置："),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var s = 'hello, world';\ns.indexOf('world'); // 返回7\ns.indexOf('World'); // 没有找到指定的子串，返回-1\n")])])])]),a._v(" "),r("li",[a._v("substring()返回指定索引区间的子串：（左闭右开）"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var s = 'hello, world'\ns.substring(0, 5); // 从索引0开始到5（不包括5），返回'hello'\ns.substring(7); // 从索引7开始到结束，返回'world'\n")])])])]),a._v(" "),r("li",[a._v("split()字符串分割返回数组："),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('var a = "hello,world!";\nvar b = a.split(","); // b = ["hello" , "world!"];\n')])])])])])])]),a._v(" "),r("h3",{attrs:{id:"_1-1-2-number"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-2-number"}},[a._v("#")]),a._v(" 1.1.2 Number")]),a._v(" "),r("h3",{attrs:{id:"_1-1-1-boolean"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-1-boolean"}},[a._v("#")]),a._v(" 1.1.1 Boolean")]),a._v(" "),r("h2",{attrs:{id:"_1-2-引用数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-引用数据类型"}},[a._v("#")]),a._v(" 1.2 引用数据类型")]),a._v(" "),r("h3",{attrs:{id:"_1-2-1-object"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-object"}},[a._v("#")]),a._v(" 1.2.1 Object")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v('对象：数据类型\n\t\t{\n\t\t\t//键值对\n\t\t\t//key 不能是数字，有特殊字符需要“”引起来\n\t\t\tkey:value\n\t\t}\n\t\t**function 也是一种引用类型**\n\t\nMap: 数据结构\n\t{\n\t\t//键值对\n\t\t//key 可以是数字，map中可以存在重复键值对\n\t\tkey:value\n\t}\nvar map =new Map();\nmap.set("a",1);\nmap.set(1,2);\nmap.get(1);//2\nm.delete("a"); //删除key a\nm.has("a"); //是否存在 key值为a\n\nSet: 数据结构\n\t{\n\t\t//键值对\n\t\t//key 可以是数字，set中不可以存在重复键值对\n\t\tkey:value\n\t}\nvar set = new Set(); // 空Set\nset.add(1,2,3);\nset.delete(3);\n\t\n遍历方式：\n\t1.具有iterable类型(Array、Map、Set)的集合可以通过新的for ... of循环来遍历\n\t2.Array 可以通过遍历数组下标方式遍历，map、set不行\n\t\tfor （var x in array）{...}\n\t\tx为遍历数组下标\n\t3.for ... of循环是ES6引入的新的语法\n\tfor(var x of map){...}\n\tfor(var x of set){...}\n')])])]),r("h3",{attrs:{id:"_1-2-2-array数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-array数组"}},[a._v("#")]),a._v(" 1.2.2 Array数组")]),a._v(" "),r("ul",[r("li",[a._v("数组常用方法\t：\n"),r("ul",[r("li",[a._v("如果通过索引赋值时，索引超过了范围，会引起Array大小的变化")]),a._v(" "),r("li",[a._v("直接给Array的length赋一个新的值会导致Array大小的变化"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, 2, 3];\narr[5] = 'x';\narr; // arr变为[1, 2, 3, undefined, undefined, 'x']\narr.length =7;\narr; // arr变为[1, 2, 3, undefined, undefined,‘x’, undefined]\n")])])])]),a._v(" "),r("li",[a._v("indexOf()会搜索指定字符串出现的位置："),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var s = 'hello, world';\ns.indexOf('world'); // 返回7\ns.indexOf('World'); // 没有找到指定的子串，返回-1\n")])])])]),a._v(" "),r("li",[a._v("slice()返回指定索引区间的新数组：（左闭右开）"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\narr.slice(0, 3); // 从索引0开始，到索引3结束，但不包括索引3: ['A', 'B', 'C']\narr.slice(3); // 从索引3开始到结束: ['D', 'E', 'F', 'G']\n")])])])]),a._v(" "),r("li",[a._v("sort()"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("排序\n")])])])]),a._v(" "),r("li",[a._v("reverse()"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("反转\n")])])])]),a._v(" "),r("li",[a._v("splice()\n"),r("ul",[r("li",[a._v("指定位置删除，并且添加，返回删除数组"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];\n// 从索引2开始删除3个元素,然后再添加两个元素:\narr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']\n")])])])]),a._v(" "),r("li",[a._v("只删除,不添加"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("arr.splice(2, 2); // ['Google', 'Facebook']\narr; // ['Microsoft', 'Apple', 'Oracle']\n")])])])]),a._v(" "),r("li",[a._v("只添加，不删除"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("arr.splice(2, 0,\"ly\"); // [ ]\narr; // ['Microsoft', 'Apple','ly', 'Oracle']\n")])])])])])]),a._v(" "),r("li",[a._v("concat\n"),r("ul",[r("li",[a._v("不改变当前数组，生成新数组"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = ['A', 'B', 'C'];\narr.concat(1, 2, [3, 4]); // ['A', 'B', 'C', 1, 2, 3, 4]\n")])])])])])]),a._v(" "),r("li",[a._v("join\n"),r("ul",[r("li",[a._v("数组转字符串"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = ['A', 'B', 'C', 1, 2, 3];\narr.join('-'); // 'A-B-C-1-2-3' \n")])])])])])]),a._v(" "),r("li",[a._v("push和pop\n"),r("ul",[r("li",[a._v("操作数组末尾元素"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, 2];\narr.push('A', 'B'); // 返回Array新的长度: 4\narr; // [1, 2, 'A', 'B']\narr.pop(); // pop()返回'B'\narr; // [1, 2, 'A']\narr.pop(); arr.pop(); arr.pop(); // 连续pop 3次\narr; // []\narr.pop(); // 空数组继续pop不会报错，而是返回undefined\narr; // []\n\t```\t\n")])])])])])]),a._v(" "),r("li",[a._v("shift和unshift\n"),r("ul",[r("li",[a._v("操作数组首元素"),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("var arr = [1, 2];\narr.unshift('A', 'B'); // 返回Array新的长度: 4\narr; // ['A', 'B', 1, 2]\narr.shift(); // 'A'\narr; // ['B', 1, 2]\narr.shift(); arr.shift(); arr.shift(); // 连续shift 3次\narr; // []\narr.shift(); // 空数组继续shift不会报错，而是返回undefined\narr; // []\n\n")])])])])])])])])]),a._v(" "),r("h2",{attrs:{id:"_1-3-function"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-function"}},[a._v("#")]),a._v(" 1.3 Function")]),a._v(" "),r("h2",{attrs:{id:"_1-4-nan"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-nan"}},[a._v("#")]),a._v(" 1.4 NaN")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v("NaN ：是代表非数字值的特殊值 （一些方法只要返回非数字，也会出现NaN）\n这个特殊的Number与所有其他值都不相等，包括它自己\nNaN === NaN; // false\n\n唯一能判断NaN的方法是通过isNaN()函数：\nisNaN(NaN); // true\n")])])]),r("h2",{attrs:{id:"_1-5-null和undefined"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-null和undefined"}},[a._v("#")]),a._v(" 1.5 null和undefined")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v('null：表示空值；不是数字0，也不是空字符串" "\nundefined：表示未定义；即值是存在的，但是函数传参过程中未定义\n')])])]),r("h2",{attrs:{id:"_1-6-比较运算符-和"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-比较运算符-和"}},[a._v("#")]),a._v(" 1.6 比较运算符 == 和 ===")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[a._v("== ： 会自动转换数据格式 （尽量不要用）\n===：先比较数据格式，再比较值\n")])])]),r("h1",{attrs:{id:"_2-数据类型检测"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据类型检测"}},[a._v("#")]),a._v(" 2. 数据类型检测")]),a._v(" "),r("h2",{attrs:{id:"_2-1-typeof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-typeof"}},[a._v("#")]),a._v(" 2.1 typeof")]),a._v(" "),r("ul",[r("li",[a._v("检验"),r("strong",[a._v("基本数据类型")])]),a._v(" "),r("li",[a._v("是一种操作符，不是一种方法")])]),a._v(" "),r("h2",{attrs:{id:"_2-2-instanceof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-instanceof"}},[a._v("#")]),a._v(" 2.2 instanceof")]),a._v(" "),r("ul",[r("li",[a._v("检验"),r("strong",[a._v("引用数据类型")])]),a._v(" "),r("li",[a._v("原理：\n"),r("ul",[r("li",[r("strong",[a._v("a instanceof b  ===> 实例a."),r("strong",[a._v("proto")]),a._v(" instanceof 构造函数B.prototype")])])])])]),a._v(" "),r("h1",{attrs:{id:"_3-数据类型转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据类型转换"}},[a._v("#")]),a._v(" 3. 数据类型转换")]),a._v(" "),r("h2",{attrs:{id:"_3-1-typeof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-typeof"}},[a._v("#")]),a._v(" 3.1 typeof")]),a._v(" "),r("h2",{attrs:{id:"_3-2-instanceof"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-instanceof"}},[a._v("#")]),a._v(" 3.2 instanceof")])])}),[],!1,null,null,null);t.default=s.exports}}]);